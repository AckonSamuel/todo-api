openapi: 3.0.3
info:
  title: 'The Todo API'
  description: 'The Todo API is a RESTful service for managing tasks, enabling users to create, read, update, and delete todos. It includes endpoints for filtering, sorting, and searching todos, as well as clear error responses for invalid requests or server issues.'
  version: 1.0.0
servers:
  -
    url: 'https://pengion-todo-a4f1355a880e.herokuapp.com'
paths:
  /api/v1/todos:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: status
          description: 'Filter by status.'
          example: completed
          required: false
          schema:
            type: string
            description: 'Filter by status.'
            example: completed
            nullable: false
        -
          in: query
          name: search
          description: 'Search by title or details.'
          example: null
          required: false
          schema:
            type: string
            description: 'Search by title or details.'
            example: null
            nullable: false
      responses:
        200:
          description: 'A list of todos'
          content:
            text/plain:
              schema:
                type: string
                example: '{"data":[{ "id": 13, "title": "Officia maiores fugiat quasi eligendi at.", "details": "Tempore velit qui magnam corrupti officiis occaecati. Quae dignissimos dolorem adipisci ab hic. Qui est maxime aut ut voluptatem autem aut. Minus laboriosam rem ducimus vero vero provident odio.", "status": "completed" }, { "id": 14, "title": "Nostrum et ea et dolore et in rerum.", "details": "Dolor consequatur dolore hic dolorem aut veniam. Ex amet voluptatem ipsa deleniti ut occaecati tempora recusandae. Consectetur beatae corrupti voluptates vel.", "status": "in progress" },]}'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Failed to fetch todos.'
                  message: 'Error details'
                properties:
                  error:
                    type: string
                    example: 'Failed to fetch todos.'
                  message:
                    type: string
                    example: 'Error details'
      tags:
        - Todos
      security: []
    post:
      summary: 'Create a new todo item'
      operationId: createANewTodoItem
      description: ''
      parameters: []
      responses:
        201:
          description: 'Todo successfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 63
                    title: gym
                    details: 'up down, up down'
                    status: completed
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      title:
                        type: string
                        example: gym
                      details:
                        type: string
                        example: 'up down, up down'
                      status:
                        type: string
                        example: completed
        400:
          description: 'Bad request (validation error or unwanted parameters)'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Unwanted parameters found: unexpectedField'
                properties:
                  error:
                    type: string
                    example: 'Unwanted parameters found: unexpectedField'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Failed to create todo.'
                  message: 'Error details'
                properties:
                  error:
                    type: string
                    example: 'Failed to create todo.'
                  message:
                    type: string
                    example: 'Error details'
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the todo.'
                  example: 'Buy groceries'
                  nullable: false
                details:
                  type: string
                  description: 'The details of the todo.'
                  example: 'Milk, Bread, Butter'
                  nullable: false
                status:
                  type: string
                  description: 'The status of the todo.'
                  example: completed
                  nullable: false
              required:
                - title
                - status
      security: []
  '/api/v1/todos/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 63
                    title: gym
                    details: 'up down, up down'
                    status: completed
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      title:
                        type: string
                        example: gym
                      details:
                        type: string
                        example: 'up down, up down'
                      status:
                        type: string
                        example: completed
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Todo not found.'
                  message: 'Model not found details'
                properties:
                  error:
                    type: string
                    example: 'Todo not found.'
                  message:
                    type: string
                    example: 'Model not found details'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Failed to update todo.'
                  message: 'Error details'
                properties:
                  error:
                    type: string
                    example: 'Failed to update todo.'
                  message:
                    type: string
                    example: 'Error details'
      tags:
        - Todos
      security: []
    put:
      summary: 'Update the todo item'
      operationId: updateTheTodoItem
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 63
                    title: 'Updated title'
                    details: 'Updated details'
                    status: completed
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      title:
                        type: string
                        example: 'Updated title'
                      details:
                        type: string
                        example: 'Updated details'
                      status:
                        type: string
                        example: completed
        400:
          description: 'Bad request (validation error or unwanted parameters)'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Unwanted parameters found: unexpectedField'
                properties:
                  error:
                    type: string
                    example: 'Unwanted parameters found: unexpectedField'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Todo not found.'
                  message: 'Model not found details'
                properties:
                  error:
                    type: string
                    example: 'Todo not found.'
                  message:
                    type: string
                    example: 'Model not found details'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Failed to update todo.'
                  message: 'Error details'
                properties:
                  error:
                    type: string
                    example: 'Failed to update todo.'
                  message:
                    type: string
                    example: 'Error details'
      tags:
        - Todos
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the todo.'
                  example: 'Updated title'
                  nullable: false
                details:
                  type: string
                  description: 'The details of the todo.'
                  example: 'Updated details'
                  nullable: false
                status:
                  type: string
                  description: 'The status of the todo.'
                  example: completed
                  nullable: false
      security: []
    delete:
      summary: 'Remove the specified todo item.'
      operationId: removeTheSpecifiedTodoItem
      description: ''
      parameters: []
      responses:
        204:
          description: 'Todo successfully deleted'
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Todo not found.'
                  message: 'Model not found details'
                properties:
                  error:
                    type: string
                    example: 'Todo not found.'
                  message:
                    type: string
                    example: 'Model not found details'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Failed to delete the todo.'
                  message: 'Error details'
                properties:
                  error:
                    type: string
                    example: 'Failed to delete the todo.'
                  message:
                    type: string
                    example: 'Error details'
      tags:
        - Todos
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the todo.'
        example: 63
        required: true
        schema:
          type: integer
tags:
  -
    name: Todos
    description: "\nAPIs for managing todos"
